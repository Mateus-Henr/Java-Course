<?xml version="1.0" encoding="UTF-8"?>
<?import javafx.scene.control.TableView?>
<?import javafx.scene.layout.BorderPane?>

<!-- Since the table will occupy the entire window "BorderPane" will be used. -->
<?import javafx.scene.control.TableColumn?>
<?import javafx.scene.control.cell.PropertyValueFactory?>
<?import javafx.scene.control.MenuBar?>
<?import javafx.scene.control.Menu?>
<?import javafx.scene.control.MenuItem?>
<BorderPane fx:id="mainPanel" fx:controller="challenge.Controller"
            xmlns:fx="http://javafx.com/fxml">
    <top>
        <MenuBar>
            <menus>
                <Menu text="Contacts">
                    <items>
                        <MenuItem text="New..." onAction="#showAddContactDialog"/>
                    </items>
                    <items>
                        <MenuItem text="Edit..." onAction="#showEditContactDialog"/>
                    </items>
                    <items>
                        <MenuItem text="Delete..." onAction="#deleteContact"/>
                    </items>
                </Menu>
            </menus>
        </MenuBar>
    </top>
    <!-- Because we want to use data binding if any modifications in the code happen, we need to assign a cell value
    factory to each column. The "PropertyValueFactory" is like an id, it's used to connect the control to the
    Controller. -->
    <center>
        <TableView fx:id="tableView">
            <!-- The "columnResizePolicy" property can be used to resize the table view in relation to the main window.
            As it's being used here the table will resize itself occupying the entire main window. -->
            <columnResizePolicy>
                <TableView fx:constant="CONSTRAINED_RESIZE_POLICY"/>
            </columnResizePolicy>
            <columns>
                <TableColumn text="First Name">
                    <cellValueFactory>
                        <PropertyValueFactory property="firstName"/>
                    </cellValueFactory>
                </TableColumn>
                <TableColumn text="Last Name">
                    <cellValueFactory>
                        <PropertyValueFactory property="lastName"/>
                    </cellValueFactory>
                </TableColumn>
                <TableColumn text="Phone Number">
                    <cellValueFactory>
                        <PropertyValueFactory property="phoneNumber"/>
                    </cellValueFactory>
                </TableColumn>
                <TableColumn text="Notes">
                    <cellValueFactory>
                        <PropertyValueFactory property="notes"/>
                    </cellValueFactory>
                </TableColumn>
            </columns>
        </TableView>
    </center>
</BorderPane>
